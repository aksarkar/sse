#+TITLE: PIP calibration
#+SETUPFILE: setup.org
#+PROPERTY: header-args:ipython+ :session kernel-sse.json

* Setup                                                            :noexport:

  #+BEGIN_SRC emacs-lisp
    (org-babel-lob-ingest "/home/aksarkar/.emacs.d/org-templates/library.org")
  #+END_SRC

  #+RESULTS:
  : 1

  #+CALL: ipython3(mem="4G", venv="sse") :dir /scratch/midway2/aksarkar/sse

  #+RESULTS:
  : Submitted batch job 40932748

  #+BEGIN_SRC ipython
    import colorcet
    import glob
    import matplotlib.pyplot as plt
    import numpy as np
    import pandas as pd
    import sse
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  :END:

* Introduction

  Here we estimate Spearman correlation between posterior inclusion
  probabilities (PIPs) computed using the Sum of Single Effects (SSE)
  variational approximation against other methods:

  - [[http://www.sciencedirect.com/science/article/pii/S0002929716300957?via%253Dihub][DAP]] (2016). We used version 1.0, setting \(\phi = 0\) (no heterogeneity
    between groups of samples) and \(\omega = 1\) (matching the
    simulation). (~sse.wrapper.dap~)

  The simulation generative model is as follows (~sse.evaluate._pip_calibration~):

  1. Sample a gene on chromosomes 1-22

    #+BEGIN_SRC ipython
      genes = (pd.read_table('/home/aksarkar/projects/singlecell-qtl/data/scqtl-genes.txt.gz')
               .set_index('gene')
               .query('source == "H. sapiens"')
               .query('chr != "hsX"')
               .query('chr != "hsY"')
               .query('chr != "hsMT"'))
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    :END:

  2. Extract genotypes of GEUVADIS individuals \(X\) from 100 kilobases
     upstream (respecting strand) of the gene start
     (~sse.evaluate.read_vcf~).

    #+BEGIN_SRC ipython
      genotype_files = ["/project/compbio/geuvadis/genotypes/GEUVADIS.chr{}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.vcf.gz".format(i) for i in range(1, 23)]
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    :END:

  3. [@3] Estimate MAF \(f_j\) from \(X\) (~sse.simulation.Simulation.estimate_maf~)
  4. Fix proportion of variance explained \(h^2 = 0.15\) (mean
     /cis/-heritability of gene expression across all genes; [[https://www.nature.com/articles/ng.3506][Gusev et al 2016]],
     [[https://www.nature.com/articles/ng.3506][Wheeler et al 2016]])
  5. Sample causal effects from \(\beta_j \sim N(0, 1)\)
     (~sse.simulation.Simulation.sample_effects~).
  6. Compute genetic variance \(V_g = \sum_j 2 f_j (1 - f_j) \beta_j^2\)
  7. Sample residuals \(\epsilon_i \sim N(0, V_g (1 / h^2 - 1))\)
  8. Compute phenotypes \(y_i = X_i\beta + \epsilon_i\) (~sse.simulation.Simulation.compute_liabilities~)

* One causal variant

  #+BEGIN_SRC ipython :async t
    one_causal = sse.evaluate.pip_calibration(
      genes=genes,
      genotype_files=genotype_files,
      num_genes=100,
      num_trials=1,
      num_effects=10,
      seed=0)
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  :END:

  Tabulate the actual number of variants used in the simulation:

  #+BEGIN_SRC ipython
    one_causal.groupby(level=0).apply(lambda x: x.iloc[0]['num_snps'])
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  #+BEGIN_EXAMPLE
  ENSG00000003402    1061.0
    ENSG00000004776    1406.0
    ENSG00000008018    1153.0
    ENSG00000012779    1921.0
    ENSG00000029725    1404.0
    ENSG00000063322    1151.0
    ENSG00000064666    1734.0
    ENSG00000082497    1410.0
    ENSG00000095303    1210.0
    ENSG00000095585    1408.0
    ENSG00000100285    1317.0
    ENSG00000101187     925.0
    ENSG00000104881    1307.0
    ENSG00000105523    1225.0
    ENSG00000108309    1152.0
    ENSG00000108523    1290.0
    ENSG00000109771    1397.0
    ENSG00000115137    1130.0
    ENSG00000115541    1087.0
    ENSG00000116117    1420.0
    ENSG00000123364    1393.0
    ENSG00000128309    1749.0
    ENSG00000130147    1620.0
    ENSG00000130699    1498.0
    ENSG00000130725     441.0
    ENSG00000132329    1363.0
    ENSG00000135482    1048.0
    ENSG00000136531    1311.0
    ENSG00000139190    1495.0
    ENSG00000139974    1234.0
                        ...  
    ENSG00000181019    1250.0
    ENSG00000181333    1512.0
    ENSG00000181562    1781.0
    ENSG00000182177    1418.0
    ENSG00000182791    1036.0
    ENSG00000184787    1592.0
    ENSG00000184898    1484.0
    ENSG00000188133    1546.0
    ENSG00000196371    1462.0
    ENSG00000197385    1479.0
    ENSG00000197822    1086.0
    ENSG00000198829    1427.0
    ENSG00000204248    1103.0
    ENSG00000204385    1053.0
    ENSG00000204488      21.0
    ENSG00000213265    1195.0
    ENSG00000213398    1026.0
    ENSG00000214447    1296.0
    ENSG00000215612    1884.0
    ENSG00000220256    1656.0
    ENSG00000223802    1224.0
    ENSG00000226209    1519.0
    ENSG00000228835    1287.0
    ENSG00000236029       1.0
    ENSG00000254087    1342.0
    ENSG00000255561    1117.0
    ENSG00000267884    1534.0
    ENSG00000268156    1309.0
    ENSG00000268488    1194.0
    ENSG00000269042    1147.0
    Length: 100, dtype: float64
  #+END_EXAMPLE
  :END:

  #+BEGIN_SRC ipython
    del one_causal['num_snps']
  #+END_SRC

  #+BEGIN_SRC ipython :ipyfile one-causal-variant-spearman.png
    plt.clf()
    plt.boxplot(one_causal.fillna(0).values, labels=one_causal.columns)
    plt.xlabel('Method')
    plt.ylabel('Spearman correlation with SSE PIP')
    plt.gcf()
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  [[file:one-causal-variant-spearman.png]]
  :END:

* Two causal variants

  #+BEGIN_SRC ipython :async t
    two_causal = sse.evaluate.pip_calibration(
      genes=genes,
      genotype_files=genotype_files,
      num_genes=100,
      num_trials=1,
      num_causal=2,
      num_effects=10,
      seed=0)
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  :END:

  #+BEGIN_SRC ipython
    del two_causal['num_snps']
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  :END:

  #+BEGIN_SRC ipython :ipyfile two-causal-variants-spearman.png
    plt.clf()
    plt.boxplot(two_causal.fillna(0).values, labels=two_causal.columns)
    plt.xlabel('Method')
    plt.ylabel('Spearman correlation with SSE PIP')
    plt.gcf()
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  [[file:two-causal-variants-spearman.png]]
  :END:
